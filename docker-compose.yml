version: "3.8"

services:
  database:
    image: postgres:alpine
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data_challenge:/var/lib/postgresql/data
    networks:
      - backend_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/.env
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend_net

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - frontend_net
      - backend_net

volumes:
  postgres_data_challenge:

networks:
  frontend_net:
  backend_net:
